@model SimpleCMS.Models.ARTFO.Art
@if (!@Request.IsAjaxRequest())
{
    ViewBag.Title = @SimpleCMS.SimpleCMS.Resources.Blog.Resources.Details;
}
<style>
    .art-image {
        width:100%;
    }
    .delete-art-image {
        text-align:right;
    }
</style>
<div>
    <div class="row">
        <div class="col-md-12 col-md-offset-0">
            <div class="panel panel-default">
                <div class="panel-heading">
                    <h3 class="panel-title">
                        <strong>@ViewBag.Title</strong>
                        @if (!@Request.IsAjaxRequest())
                        {
                            <span class="pull-right">
                                @Html.Partial("_BackToListPartial", Model)
                            </span>
                        }
                    </h3>
                </div>
                <div class="panel-body">
                    <div class="container-fluid">
                        <div class="row">
                            <div class="col-md-2">
                                @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label bold-label" })
                            </div>
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @id = "name", @class = "form-control" } })
                            </div>
                        </div>

                        <div class="row" style="margin-top:10px;">
                            <div class="col-md-2">
                                @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label bold-label" })
                            </div>
                            <div class="col-md-10">
                                @Html.TextAreaFor(model => model.Description, new { @id = "description", @rows = "5", @class = "form-control" })
                            </div>
                        </div>

                        <div class="row" style="margin-top:10px;">
                            <div class="col-md-2">
                                @Html.LabelFor(model => model.Artist, htmlAttributes: new { @class = "control-label bold-label" })
                            </div>
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.Artist.Name, new { htmlAttributes = new { @id = "name", @class = "form-control" } })
                            </div>
                        </div>

                        <div class="row" style="margin-top:10px;">
                            <div class="col-md-2">
                                @Html.LabelFor(model => model.ArtType, htmlAttributes: new { @class = "control-label bold-label" })
                            </div>
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.ArtType.Name, new { htmlAttributes = new { @id = "name", @class = "form-control" } })
                            </div>
                        </div>

                        <div class="row" style="margin-top:10px;">
                            <div class="col-md-2">
                                <label class="control-label">
                                    @Html.Raw(@Model.Files.Count > 1 ? "Myndir" : "Mynd")
                                </label>
                            </div>
                            <div class="col-md-10">
                                @Html.Partial("_FileUploadHandler")
                                <br />
                                <ul id="newlyAddedImages"></ul>
                                @{
                                    var count = 0;
                                    foreach (var image in Model.Files)
                                    {
                                        @Html.Raw(count % 2 == 0 ? "<div class=row>" : "")
                                        <div class="col-md-6">
                                            <div id="image_@image.Id">
                                                <a title="@Resources.Delete" href="#" class="delete-art-image pull-right" data-image-id="@image.Id">
                                                    <span class="glyphicon glyphicon-remove" aria-hidden="true"></span>
                                                    @*@Resources.Delete*@
                                                </a>
                                                <br />
                                                <img src="@Url.Action("GetImage", "Art", new { @id = image.FileId })" class="art-image" />
                                                <br />
                                            </div>
                                        </div>
                                        @Html.Raw(count % 2 == 1 ? "</div>" : "")
                                        count++;
                                    }
                                }
                            </div>
                        </div>


                    </div>
                </div>
            </div>
        </div>
        @*<div class="col-md-6">
                <div class="panel panel-default">
                    <div class="panel-heading">
                        <h3 class="panel-title"><strong>@Resources.Information</strong></h3>
                    </div>
                    <div class="panel-body">

                    </div>
                </div>
            </div>*@
    </div>
</div>
<script>

    $(function () {
        $.navbarContextMenu("@Resources.Functions <span class='caret'></span>", [
            "<a href='#' class='edit-action'  data-toggle='modal' data-controller-name='Art' data-action-name='Edit?id=@Model.Id' data-model-name='Art'>@Resources.Edit</a>"
        ]);

        $(".delete-art-image").click(function () {
            if(confirm("@Resources.Delete ?")) {
                var self = $(this);
                var id = self.data('image-id');
                $.post("/Art/DeleteImage", { "id" : id }, function (d, s, xhr) {
                    console.log(d);
                    console.log(s);
                    console.log(xhr);
                    console.log(xhr.responseJSON);
                    var json = xhr.responseJSON;
                    //$("#image_" + id).remove();
                    self.parent().remove();
                    if (json) { // has json object data
                        //console.log(json);
                    } else { // Model State is Invalid (required fields shown now)

                    }
                })
                .fail(function (error) {
                    console.log("error: ");
                    console.log(error);
                });
            }
        });
    });

    function onComplete() {
        //https://github.com/macek/jquery-serialize-object
        var url = "/Art/AddImageToArt";
        var form = $("#art-images");
        var requestData = $.extend({}, { ArtId: @Model.Id }, form.serializeObject());
        form.find("input[type=hidden], input[type=text], textarea, input[type=password]").val("");
        //console.log(requestData);
        $.ajax({
            url: url,
            type: "POST",
            accept: 'application/json',
            data: requestData,
            success: function (result) {
                console.log("AddImageToArt result: ");
                console.log(result);
                
                @*var img = "<img src=" + @Url.Action("GetImage", "Art", new { @id = 29 }) + " class='art-image' />";*@
                //$.get("/Art/GetImage", { id: 28}, function(data) {
                //    $("#newlyAddedImages").html("<img src='" + result + "' class='art-image' />");
                //});
                //var fileInfo = JSON.stringify(result);
                $("#newlyAddedImages").append("<li>Fíla løgd inn: " + result.Name + "(" + result.Length + ")</li>");// "<img src='" + result + "' class='art-image' />");
            }
        });
    }

    function getTimeDiff(startDate, endDate) {
        var diff = endDate - startDate;
        //console.log(diff);
        var seconds = Math.round(diff / 1000.0);
        return seconds;
    }

    function getTimeFormatted(time) {
        var seconds = time % 60;
        if (time < 60) {
            //return seconds + " sekund";
            return "00:00:" + ("0" + seconds).slice(-2);
        }
        var minutes = Math.round(Math.floor(time / 60));
        if (minutes < 60) {
            //return minutes + " min. " + seconds + " sekund";
            return "00:" + ("0" + minutes).slice(-2) + ":" + ("0" + seconds).slice(-2);
        }
        var hours = Math.round(Math.floor(minutes / 60));
        minutes = minutes % 60;
        //var hourStr = hours > 1 ? "tímar" : "tími";
        //return hours + " " + hourStr + " " + minutes + " min. " + seconds + " sek.";
        return hours + ":" + ("0" + minutes).slice(-2) + ":" + ("0" + seconds).slice(-2);
    }
</script>
@section Scripts {
    @Scripts.Render("~/js/cms.file")
    @Scripts.Render("~/js/serialize")
}